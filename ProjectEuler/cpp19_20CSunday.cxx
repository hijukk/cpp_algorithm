#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int mon[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

bool isLeap(int n){//윤년인가?
	return (n%4==0 && n%100)|| n%400==0; //4로나눠떨어지는 100으로 떨어지지 않고 400으로 나눠떨어지는것
}

int main(int argc, char **argv)
{
	cout << "Hello" << endl;
	cout << "----------------------------" << endl;
	
	/*다음은 달력에 관한 몇 가지 일반적인 정보입니다 (필요한 경우 좀 더 연구를 해 보셔도 좋습니다).

	1900년 1월 1일은 월요일이다.
	4월, 6월, 9월, 11월은 30일까지 있고, 1월, 3월, 5월, 7월, 8월, 10월, 12월은 31일까지 있다.
	2월은 28일이지만, 윤년에는 29일까지 있다.
	윤년은 연도를 4로 나누어 떨어지는 해를 말한다. 하지만 400으로 나누어 떨어지지 않는 매 100년째는 윤년이 아니며, 400으로 나누어 떨어지면 윤년이다
	20세기 (1901년 1월 1일 ~ 2000년 12월 31일) 에서, 매월 1일이 일요일인 경우는 총 몇 번입니까?*/
	
	//변형된 진법 문제
	int cnt = 0;
	int st = (0 + 365) % 7;//1901.01.01 날짜
	for(int y = 1901; y < 2001; y++){
		for(int m = 0; m < 12; m++){
			if(st==6) cnt++; //일요일이면 
			st += mon[m] + (m==1 && isLeap(y)?1:0); //1월달이고 윤년이면 1일 더해줌
			st %= 7;
		}
	}
	cout << cnt << endl;
	
	return 0;
}

